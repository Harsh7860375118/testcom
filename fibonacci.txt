import java.util.*;
import java.io.*;

public class Main{
static Scanner sc = new Scanner(System.in);

    public static void main(String[] args){
        int T = sc.nextInt();
        while(T-->0){
            solve();
        }
    }
    //for each test case.
    public static void solve(){
        String s = sc.next();
        
        //hash
        int[] arr = new int[26];
        
        //initialize
        Arrays.fill(arr, 0);
        
        //put elements in hash array.
        for(int i = 0;i < s.length();i++){
            arr[(int)(s.charAt(i))- 97]++;
        }
        
        //sort ascending
        Arrays.sort(arr);
        
        int j = 0;
        while(arr[j] == 0 && j < 26)j++; //with this, i'll have the index to the first non-zero number.
        
        if(j >= 24){
            System.out.println("Dynamic");
            return;
        }
        
        //now the condition that was problematic for me.
        //something like 1 2 3 4 is not acceptable, but something like 2 1 3 4 is acceptable.
        //so we will check this condition here.
        
        //cause after that, i.e. from 23, no need to check this ^ condition.
        if(j <= 22){
            if(arr[j+3] != arr[j+2] + arr[j+1]){
                //swap the first two.
                arr[j] = arr[j] + arr[j+1];
                arr[j+1] = arr[j] - arr[j+1];
                arr[j] = arr[j] - arr[j+1];
            }
        }
        
        j += 2;
        while(j < 26){
            if(arr[j-2] + arr[j-1] != arr[j]){
                System.out.println("Not");
                return;
            }
            j++;
        }
        
        System.out.println("Dynamic");
    }
}